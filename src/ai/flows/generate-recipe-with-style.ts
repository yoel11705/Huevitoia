// This file is generated by Gemini.
'use server';
/**
 * @fileOverview Generates a recipe based on a list of ingredients and a desired cuisine style.
 *
 * - generateRecipeWithStyle - A function that generates a recipe with a specific style.
 * - GenerateRecipeWithStyleInput - The input type for the generateRecipeWithStyle function.
 * - GenerateRecipeWithStyleOutput - The return type for the generateRecipeWithStyle function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateRecipeWithStyleInputSchema = z.object({
  ingredients: z
    .string()
    .describe('A comma-separated list of ingredients available for the recipe.'),
  cuisineStyle: z
    .string()
    .describe(
      'The desired cuisine style for the recipe (e.g., Mexican, Asian, Italian).'
    ),
  prepTime: z
    .string()
    .describe('The maximum preparation time in minutes.'),
});
export type GenerateRecipeWithStyleInput = z.infer<
  typeof GenerateRecipeWithStyleInputSchema
>;

const GenerateRecipeWithStyleOutputSchema = z.object({
  recipeName: z.string().describe('The name of the generated recipe.'),
  ingredients: z.string().describe('A list of ingredients required for the recipe.'),
  instructions: z.string().describe('Step-by-step instructions for preparing the recipe.'),
  cuisineStyle: z.string().describe('The cuisine style of the generated recipe.'),
  prepTime: z.string().describe('The approximate preparation time in minutes.'),
});
export type GenerateRecipeWithStyleOutput = z.infer<
  typeof GenerateRecipeWithStyleOutputSchema
>;

export async function generateRecipeWithStyle(
  input: GenerateRecipeWithStyleInput
): Promise<GenerateRecipeWithStyleOutput> {
  return generateRecipeWithStyleFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateRecipeWithStylePrompt',
  input: {schema: GenerateRecipeWithStyleInputSchema},
  output: {schema: GenerateRecipeWithStyleOutputSchema},
  prompt: `You are a world-class chef specializing in fusion cuisine. Given a list of ingredients and a desired cuisine style, generate a unique and delicious recipe.

Ingredients: {{{ingredients}}}
Cuisine Style: {{{cuisineStyle}}}
Maximum Preparation Time: {{{prepTime}}} minutes

Consider the cuisine style when creating the recipe and tailor the ingredients and instructions accordingly. The recipe should be easy to follow and suitable for home cooking.

Recipe Name:
Ingredients:
Instructions:
Cuisine Style: {{{cuisineStyle}}}
Prep Time: {{{prepTime}}} minutes`,
});

const generateRecipeWithStyleFlow = ai.defineFlow(
  {
    name: 'generateRecipeWithStyleFlow',
    inputSchema: GenerateRecipeWithStyleInputSchema,
    outputSchema: GenerateRecipeWithStyleOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
